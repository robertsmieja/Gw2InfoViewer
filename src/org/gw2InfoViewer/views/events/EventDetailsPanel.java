/*
 *  Gw2InfoViewer - Java Swing based application that reads the Guild Wars 2 JSON API
 *  Copyright (C) 2013 Robert Smieja
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gw2InfoViewer.views.events;

import org.gw2InfoViewer.models.Event;

/**
 *
 * @author Robert Smieja
 */
public class EventDetailsPanel extends javax.swing.JPanel {

    private Event event;

    /**
     * Creates new form EventDetailsPanel
     */
    public EventDetailsPanel() {
        initComponents();

        this.event = new Event();
    }

    public Event getEvent() {
        return event;
    }

    public void setEvent(Event event) {
        this.event = event;

        eventNameText.setText(event.getEventName());
        eventIdText.setText(event.getEventId());
        mapNameText.setText(event.getMapName());
        mapIdText.setText(event.getMapId().toString());
        worldNameText.setText(event.getWorldName());
        worldIdText.setText(event.getWorldId().toString());
        stateText.setText(event.getState().toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventNameLabel = new javax.swing.JLabel();
        eventNameText = new javax.swing.JTextField();
        eventIdLabel = new javax.swing.JLabel();
        eventIdText = new javax.swing.JTextField();
        mapNameLabel = new javax.swing.JLabel();
        mapNameText = new javax.swing.JTextField();
        mapIdLabel = new javax.swing.JLabel();
        mapIdText = new javax.swing.JTextField();
        worldNameLabel = new javax.swing.JLabel();
        worldNameText = new javax.swing.JTextField();
        worldIdLabel = new javax.swing.JLabel();
        worldIdText = new javax.swing.JTextField();
        stateLabel = new javax.swing.JLabel();
        stateText = new javax.swing.JTextField();

        eventNameLabel.setText("Event Name:");

        eventNameText.setEditable(false);
        eventNameText.setText("Loading Event Name...");
        eventNameText.setMinimumSize(new java.awt.Dimension(250, 20));
        eventNameText.setPreferredSize(new java.awt.Dimension(150, 20));
        eventNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventNameTextActionPerformed(evt);
            }
        });

        eventIdLabel.setText("Event ID:");

        eventIdText.setEditable(false);
        eventIdText.setText("Loading Event ID...");
        eventIdText.setMinimumSize(new java.awt.Dimension(250, 20));
        eventIdText.setPreferredSize(new java.awt.Dimension(150, 20));
        eventIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventIdTextActionPerformed(evt);
            }
        });

        mapNameLabel.setText("Map Name:");

        mapNameText.setEditable(false);
        mapNameText.setText("Loading Map Name...");
        mapNameText.setMinimumSize(new java.awt.Dimension(250, 20));
        mapNameText.setPreferredSize(new java.awt.Dimension(250, 20));
        mapNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapNameTextActionPerformed(evt);
            }
        });

        mapIdLabel.setText("Map ID:");

        mapIdText.setEditable(false);
        mapIdText.setText("Loading Map ID...");
        mapIdText.setMinimumSize(new java.awt.Dimension(250, 20));
        mapIdText.setPreferredSize(new java.awt.Dimension(250, 20));
        mapIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapIdTextActionPerformed(evt);
            }
        });

        worldNameLabel.setText("World Name:");

        worldNameText.setEditable(false);
        worldNameText.setText("Loading World Name...");
        worldNameText.setMinimumSize(new java.awt.Dimension(250, 20));
        worldNameText.setPreferredSize(new java.awt.Dimension(150, 20));
        worldNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worldNameTextActionPerformed(evt);
            }
        });

        worldIdLabel.setText("World ID:");

        worldIdText.setEditable(false);
        worldIdText.setText("Loading World ID...");
        worldIdText.setMinimumSize(new java.awt.Dimension(250, 20));
        worldIdText.setPreferredSize(new java.awt.Dimension(150, 20));
        worldIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worldIdTextActionPerformed(evt);
            }
        });

        stateLabel.setText("State:");

        stateText.setEditable(false);
        stateText.setText("Loading State...");
        stateText.setMinimumSize(new java.awt.Dimension(250, 20));
        stateText.setPreferredSize(new java.awt.Dimension(250, 20));
        stateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventNameLabel)
                    .addComponent(worldNameLabel)
                    .addComponent(worldIdLabel)
                    .addComponent(stateLabel)
                    .addComponent(eventIdLabel)
                    .addComponent(mapNameLabel)
                    .addComponent(mapIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventNameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mapNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mapIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventIdText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(worldNameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(worldIdText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventNameLabel)
                    .addComponent(eventNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventIdLabel)
                    .addComponent(eventIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mapNameLabel)
                    .addComponent(mapNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mapIdLabel)
                    .addComponent(mapIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(worldNameLabel)
                    .addComponent(worldNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(worldIdLabel)
                    .addComponent(worldIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateLabel)
                    .addComponent(stateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void eventIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventIdTextActionPerformed

    private void mapIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mapIdTextActionPerformed

    private void worldIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worldIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_worldIdTextActionPerformed

    private void stateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateTextActionPerformed

    private void eventNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventNameTextActionPerformed

    private void mapNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mapNameTextActionPerformed

    private void worldNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worldNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_worldNameTextActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel eventIdLabel;
    private javax.swing.JTextField eventIdText;
    private javax.swing.JLabel eventNameLabel;
    private javax.swing.JTextField eventNameText;
    private javax.swing.JLabel mapIdLabel;
    private javax.swing.JTextField mapIdText;
    private javax.swing.JLabel mapNameLabel;
    private javax.swing.JTextField mapNameText;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JTextField stateText;
    private javax.swing.JLabel worldIdLabel;
    private javax.swing.JTextField worldIdText;
    private javax.swing.JLabel worldNameLabel;
    private javax.swing.JTextField worldNameText;
    // End of variables declaration//GEN-END:variables
}
